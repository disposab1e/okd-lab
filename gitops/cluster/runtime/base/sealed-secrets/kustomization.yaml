apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization

namespace: sealed-secrets

resources:
- namespace.yaml
- master-key.yaml
- https://gitlab.okd.example.com/lab/okd-lab.git//gitops/manifests/sealed-secrets?ref=HEAD

# - Remove beta in apiVersion
patches:
- target:
    kind: RoleBinding
    name: sealed-secrets-service-proxier
    namespace: kube-system
  patch: |-
    - op: replace
      path: /apiVersion
      value: rbac.authorization.k8s.io/v1
- target:
    kind: Role
    name: sealed-secrets-key-admin
    namespace: kube-system
  patch: |-
    - op: replace
      path: /apiVersion
      value: rbac.authorization.k8s.io/v1
- target:
    kind: ClusterRole
    name: secrets-unsealer
  patch: |-
    - op: replace
      path: /apiVersion
      value: rbac.authorization.k8s.io/v1
- target:
    kind: ClusterRoleBinding
    name: sealed-secrets-controller
  patch: |-
    - op: replace
      path: /apiVersion
      value: rbac.authorization.k8s.io/v1
- target:
    kind: Role
    name: sealed-secrets-service-proxier
    namespace: kube-system
  patch: |-
    - op: replace
      path: /apiVersion
      value: rbac.authorization.k8s.io/v1
- target:
    kind: RoleBinding
    name: sealed-secrets-controller
    namespace: kube-system
  patch: |-
    - op: replace
      path: /apiVersion
      value: rbac.authorization.k8s.io/v1

patchesStrategicMerge:
- |-
  apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: sealed-secrets-controller
    namespace: kube-system
  spec:
    template:
      spec:
        containers:
        - args: [ '--update-status' ]
          securityContext: 
            readOnlyRootFilesystem: true
            runAsUser:
            runAsNonRoot: 
          name: sealed-secrets-controller
        securityContext: 
          fsGroup:
- |-
  apiVersion: rbac.authorization.k8s.io/v1beta1
  kind: ClusterRole
  metadata:
    name: secrets-unsealer
    labels:
      rbac.authorization.k8s.io/aggregate-to-view: "true"
      rbac.authorization.k8s.io/aggregate-to-edit: "true"
      rbac.authorization.k8s.io/aggregate-to-admin: "true"
  rules:
  - apiGroups:
    - bitnami.com
    resources:
    - sealedsecrets
    verbs:
    - get
    - list
    - watch
    - patch
    - create
    - update
    - delete
  - apiGroups:
    - bitnami.com
    resources:
    - sealedsecrets/status
    verbs:
    - update
  - apiGroups:
    - ""
    resources:
    - secrets
    verbs:
    - get
    - create
    - update
    - delete
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - create
    - patch


- |-
  apiVersion: rbac.authorization.k8s.io/v1beta1
  kind: Role
  metadata:
    name: sealed-secrets-key-admin
    namespace: kube-system
  rules:
  - apiGroups:
      - "" 
    resourceNames:
      - sealed-secrets-controller
    resources:
      - secrets
    verbs:
    - get
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - create
      - list
- |-
  apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    name: sealedsecrets.bitnami.com
  spec:
    versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          properties:
            spec:
              type: object
              x-kubernetes-preserve-unknown-fields: true
            status:
              x-kubernetes-preserve-unknown-fields: true
          type: object
      served: true
      storage: true
      subresources:
        status: {}
